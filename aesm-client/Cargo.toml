[package]
name = "aesm-client"
version = "0.5.0"
authors = ["Fortanix, Inc."]
license = "MPL-2.0"
description = """
RPC client for Intel SGX AESM (Architectural Enclave Service Manager).

With this client, applications can obtain launch tokens for enclaves and turn
attestation reports into quotes.
"""
repository = "https://github.com/fortanix/rust-sgx"
documentation = "https://edp.fortanix.com/docs/api/aesm_client/"
homepage = "https://edp.fortanix.com/"
keywords = ["sgx", "enclave", "psw", "aesm", "aesmd"]
categories = ["api-bindings"]
autotests = true

[[test]]
name = "live_quote"
required-features = ["test-sgx", "sgxs"]

[features]
# Enable tests that can only be run on an SGX-enabled environment
test-sgx = []

[dependencies]
# Project dependencies
sgxs = { version = "0.7.0", path = "../sgxs", optional = true }
sgx-isa = { version = "0.3.0", path = "../sgx-isa"}

# External dependencies
byteorder = "1.0"          # Unlicense/MIT
lazy_static = "1"          # MIT/Apache-2.0
failure = "0.1.1"          # MIT/Apache-2.0
failure_derive = "0.1.1"   # MIT/Apache-2.0

[target.'cfg(unix)'.dependencies]
# We require a version of unix-socket with the following change:
# https://github.com/rust-lang-nursery/unix-socket/pull/30 . Alternatively, in
# the future, https://github.com/rust-lang/rust/issues/42048 might provide std
# support. In addition, we need UnixStream::connect_timeout, which may be
# provided by https://github.com/rust-lang/rust/issues/53615.
unix_socket2 = "0.5.4"     # MIT/Apache-2.0

[target.'cfg(windows)'.dependencies]
# External dependencies
winapi = { version = "0.3.7", features = ["combaseapi", "enclaveapi", "memoryapi", "objbase"] }
libloading = "0.5.2"

[target.'cfg(not(windows))'.dependencies]
protobuf = "2.16.0"        # MIT/Apache-2.0

[target.'cfg(not(windows))'.build-dependencies]
protoc-rust = "2.16.0"     # MIT/Apache-2.0

[dev-dependencies]
sgx-isa = { version = "0.3.0", path = "../sgx-isa" }
"report-test" = { version = "0.3.1", path = "../report-test" }
"sgxs-loaders" = { version = "0.2.0", path = "../sgxs-loaders" }
